-- 1. Criar o banco de dados
CREATE DATABASE RestauranteDE;
USE RestauranteDE;

-- 2. Criar as tabelas

-- Tabela de Clientes
CREATE TABLE Clientes (
    id_cliente INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    telefone VARCHAR(15),
    email VARCHAR(100)
);

-- Tabela de Mesas
CREATE TABLE Mesas (
    id_mesa INT AUTO_INCREMENT PRIMARY KEY,
    numero_mesa INT NOT NULL,
    capacidade INT NOT NULL
);

-- Tabela de Pedidos
CREATE TABLE Pedidos (
    id_pedido INT AUTO_INCREMENT PRIMARY KEY,
    id_cliente INT,
    id_mesa INT,
    data_pedido DATETIME NOT NULL,
    total DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (id_cliente) REFERENCES Clientes(id_cliente) ON DELETE CASCADE,
    FOREIGN KEY (id_mesa) REFERENCES Mesas(id_mesa) ON DELETE CASCADE
);

-- Tabela de Itens_Pedido
CREATE TABLE Itens_Pedido (
    id_item INT AUTO_INCREMENT PRIMARY KEY,
    id_pedido INT,
    descricao_item TEXT NOT NULL,
    quantidade INT NOT NULL,
    preco_unitario DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (id_pedido) REFERENCES Pedidos(id_pedido) ON DELETE CASCADE
);

-- 3. Inserir dados

-- Inserindo dados na tabela Clientes
INSERT INTO Clientes (nome, telefone, email) VALUES
('João Silva', '123456789', 'joao@example.com'),
('Maria Oliveira', '987654321', 'maria@example.com'),
('Carlos Santos', '123123123', 'carlos@example.com');

-- Inserindo dados na tabela Mesas
INSERT INTO Mesas (numero_mesa, capacidade) VALUES
(1, 4),
(2, 2),
(3, 6);

-- Inserindo dados na tabela Pedidos
INSERT INTO Pedidos (id_cliente, id_mesa, data_pedido, total) VALUES
(1, 1, '2024-09-30 18:00:00', 150.00),
(2, 2, '2024-09-30 19:00:00', 80.00);

-- Inserindo dados na tabela Itens_Pedido
INSERT INTO Itens_Pedido (id_pedido, descricao_item, quantidade, preco_unitario) VALUES
(1, 'Pizza', 2, 25.00),
(1, 'Refrigerante', 3, 5.00),
(2, 'Salada', 1, 15.00),
(2, 'Suco', 2, 10.00);

-- 4. Consultar dados

-- Listar todos os clientes
SELECT * FROM Clientes;

-- Listar todas as mesas
SELECT * FROM Mesas;

-- Listar todos os pedidos
SELECT * FROM Pedidos;

-- Consultar itens de um pedido específico e total do pedido
SELECT ip.descricao_item, ip.quantidade, ip.preco_unitario, 
       (ip.quantidade * ip.preco_unitario) AS subtotal
FROM Itens_Pedido ip
JOIN Pedidos p ON ip.id_pedido = p.id_pedido
WHERE p.id_pedido = 1;

-- 5. Atualizar dados

-- Atualizar informações de um cliente
UPDATE Clientes
SET telefone = '111222333', email = 'joao.novo@example.com'
WHERE id_cliente = 1;

-- Atualizar informações de uma mesa
UPDATE Mesas
SET capacidade = 5
WHERE id_mesa = 1;

-- 6. Deletar dados

-- Excluir um pedido e todos os itens relacionados
DELETE FROM Pedidos WHERE id_pedido = 1;

-- O comando acima removerá também os itens associados ao pedido devido à cláusula ON DELETE CASCADE
